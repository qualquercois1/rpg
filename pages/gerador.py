import streamlit as st

st.set_page_config(
    page_title="Gerador",
    page_icon="üé≤",
    layout="centered"
)

themes = [
    {
        'titulo': 'Revolta Arcanopunk',
        'descricao': 'Em uma cidade onde a tecnologia a vapor e a magia r√∫nica competem, os jogadores s√£o membros da resist√™ncia contra um imp√©rio tecnol√≥gico que busca erradicar a magia.'
    },
    {
        'titulo': 'Os Ecos do Cataclismo',
        'descricao': 'Mil anos ap√≥s uma guerra divina que quebrou o mundo, pequenas comunidades sobrevivem em uma terra com anomalias m√°gicas e ru√≠nas de uma civiliza√ß√£o grandiosa.'
    },
    {
        'titulo': 'Cr√¥nicas do Mar de Serpentes',
        'descricao': 'A Era de Ouro da Pirataria, mas os mitos s√£o reais: sereias, krakens e ilhas amaldi√ßoadas existem e s√£o perigos constantes.'
    },
    {
        'titulo': 'O Limiar do Vazio',
        'descricao': 'Em um futuro distante, a tripula√ß√£o de uma nave de explora√ß√£o encontra algo incompreens√≠vel que desafia as leis da f√≠sica e da sanidade.'
    },
    {
        'titulo': 'Sementes do Amanh√£',
        'descricao': 'Em um futuro otimista p√≥s-colapso, a humanidade reconstr√≥i o mundo de forma sustent√°vel, focando em coopera√ß√£o e tecnologia limpa.'
    },
    {
        'titulo': 'Aleat√≥rio',
        'descricao': 'Pode ser qualquer coisa'
    }
]

if 'theme_index' not in st.session_state:
    st.session_state.theme_index = 0

st.title('Gerador')

with st.expander('Gerador', expanded=True):
    st.subheader('Formulario')
    st.info('Os campos s√£o opcionais.')

    col1, col2 = st.columns(2)
    with col1:
        nome = st.text_input('Nome')

        idade = st.number_input('Idade', format='%d', step=1)

        cor_olhos = st.selectbox(
            'Cor dos olhos',
            ['', 'Azul', 'Castanho', 'Verde', 'Preto', 'Branco', 'Cinza', 'Lil√°s', 'Outro...']
        )

        classe = st.selectbox(
            'Classe:',
            ["", "Guerreiro(a)", "Mago(a)", "Ladr√£o(a)", "Cl√©rigo(a)", "B√°rbaro(a)", "Bardo", "Patrulheiro(a)", "Druida", "Outro..."]
        )
        if classe == 'Outro...':
            classe = st.text_input('Digite a Classe desejada')

        

    with col2:
        altura = st.number_input("Altura", placeholder="Ex: 1,80m", min_value=0.0, step=0.1)

        fisico = st.selectbox(
            "Fisico",
            ["", "Magro(a)", "Atl√©tico(a)", "Robusto(a)", "Normal"]
        )

        raca = st.selectbox(
            'Ra√ßa',
            ["", "Humano(a)", "Elfo(a)", "An√£o(√£)", "Orc", "Halfling", "Meio-Elfo(a)", "Draconato(a)", "Outro..."]
        )
        if raca == 'Outro...':
            raca = st.text_input('Digite a ra√ßa desejada')

        regiao = st.selectbox(
            "Regi√£o",
            ["", "As Terras Partidas de Vor'Thal", 
            "O Sussurro Verdejante de Sylanar", 
            "Os C√¢nions de Ferro e Fogo de Kaz'Dur", 
            "O Arquip√©lago da Mar√© de Cristal",
            "As Plan√≠cies Desoladas do Crep√∫sculo Eterno",
            "Outro..."]
        )

        if regiao == 'Outro...':
            regiao = st.text_input('Digite a regi√£o desejada')

    st.markdown("<h1 style='text-align: center;'>üìú Explore Temas üìú</h1>", unsafe_allow_html=True)

    new_col1, new_col2, new_col3 = st.columns([1,5,1])
    
    with new_col1:
        if st.button("‚¨ÖÔ∏è Anterior", use_container_width=True):
            st.session_state.theme_index = (st.session_state.theme_index - 1) % len(themes)

    with new_col3:
        if st.button("Pr√≥ximo ‚û°Ô∏è", use_container_width=True):
            st.session_state.theme_index = (st.session_state.theme_index + 1) % len(themes)

    with new_col2:
        current_theme = themes[st.session_state.theme_index]

        st.subheader(f"_{current_theme['titulo']}_")
        
        st.markdown(f"**Descri√ß√£o:** {current_theme['descricao']}")

    st.markdown("---")

    page_indicator = " ".join(["‚óè" if i == st.session_state.theme_index else "‚óã" for i in range(len(themes))])
    st.markdown(f"<p style='text-align: center; font-size: 20px;'>{page_indicator}</p>", unsafe_allow_html=True)

    enviar = st.button('Enviar', use_container_width=True)

if enviar:
    tema_selecionado = themes[st.session_state.theme_index]

    dados_finais = {
        "Tema": tema_selecionado['titulo'],
        "Nome": nome,
        "Idade": idade,
        "Cor dos Olhos": cor_olhos,
        "Classe": classe,
        "Altura": altura,
        "F√≠sico": fisico,
        "Ra√ßa": raca,
        "Regi√£o": regiao,
    }

    st.success("Dados prontos para a gera√ß√£o!")

    with st.spinner("Construindo prompt e chamando a IA..."):
        prompt_para_ia = "Crie um personagem com os seguintes detalhes:\n"
        for key, value in dados_finais.items():
            if value: # Adiciona ao prompt apenas os campos preenchidos
                prompt_para_ia += f"- {key}: {value}\n"
        
        # Apenas para demonstra√ß√£o, vamos exibir o prompt que seria enviado.
        # Aqui voc√™ chamaria a sua fun√ß√£o: response = generate_content_from_gemini(prompt_para_ia)
        st.code(prompt_para_ia, language='text')
        st.info("O prompt acima seria enviado para a IA para gerar a descri√ß√£o completa do personagem.")
